<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: swift | zxhfirefox's Blog]]></title>
  <link href="http://zxhfirefox.github.io/blog/categories/swift/atom.xml" rel="self"/>
  <link href="http://zxhfirefox.github.io/"/>
  <updated>2014-09-14T19:05:58+08:00</updated>
  <id>http://zxhfirefox.github.io/</id>
  <author>
    <name><![CDATA[zxhfirefox]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Welcome to Swift A Swift Tour]]></title>
    <link href="http://zxhfirefox.github.io/blog/2014/09/14/welcome-to-swift-a-swift-tour/"/>
    <updated>2014-09-14T18:29:00+08:00</updated>
    <id>http://zxhfirefox.github.io/blog/2014/09/14/welcome-to-swift-a-swift-tour</id>
    <content type="html"><![CDATA[<p>传统来说，我们学习一门语言的第一个程序将是HelloWorld。在Swift里，非常简单：</p>

<p><code>swift
println("Hello,World")
</code></p>

<p>如果你之前写过C或者Objc的代码，这个语法你应该不陌生，在Swift里，这行代码就是一个完整的程序，你不需要导入其他库来使用输入输出或者字符串处理。写在全局作用域的代码被用来作为程序的入口，所以你不需要一个main函数。你也不用在每一个语句后面写上分号。</p>

<p>这里我们将通过许多的例子来给你足够的知识让你能够开始用Swift写代码。遇到不能理解的地方也不要紧，这里的所有内容在这本书的剩余部分都会详细介绍。</p>

<h4>Simple Values</h4>

<p>用let来声明常量，var声明变量。常量的值不需要在编译期知道，但是你只能赋值一次，这意味着你用常量来定义一次，然后在很多地方使用。</p>

<p><code>swift
var myVariable = 42
myVariable = 48
let myConstant = 42
</code></p>

<p>常量和变量必须具有和你赋值给他们的值相同的类型，但是你并需要总是明确的写出他们的类型。你只管提供值，让编译期绝对类型。在上面的例子里，myVaribale将是整数类型，因为它的初始化值是整数。</p>

<p>如果一个初始化值不足以提供类型信息，那你就必须提供类型，写在变量的后面，用冒号隔开。</p>

<p><code>swift
let implictInteger = 70
let implictDouble = 70.0
let explictDouble : Double = 70
</code></p>

<p>值永远都不会隐式转换为其他类型。如果你需要转换一个值到另外一个类型，你需要显式转化。</p>

<p><code>swift
let label = "The width is "
let width = 94
let widthLabel = label + String(width)
</code></p>

<p>其实有更简单的办法在字符串中插入值，把值写在括号里，在括号前面写一个 \ 。</p>

<p><code>swift
let apples = 3
let oranges = 5
let appleSummary = "I have \\(apples) apples"
let fruitSummary = "I have \\(apples + oranges) pieces of fruit."
</code></p>

<p>使用[ ]来创建数组和字典，在[ ]里写上索引或键来访问数字和字典里的元素。</p>

<p>&#8220;` swift
var shoppingList = [&ldquo;catfish&rdquo;, &ldquo;water&rdquo;, &ldquo;tulips&rdquo;, &ldquo;blue paint&rdquo;]
shoppingList[1] = &ldquo;bottle of water&rdquo;
var occupations = [</p>

<pre><code>"Malcolm" : "Captain" ,
"Kaylee"  : "Mechanic",
</code></pre>

<p>]
occupations[&ldquo;Jayne&rdquo;] = &ldquo;Public Relations&rdquo;
&#8220;`</p>

<p>创建空的数字和字典，用初始化语法：</p>

<p><code>swift
let emptyArray = \[String]()
let emptyDictionary = \[String:Float]()
</code></p>

<h4>Control Flow</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Welcome to Swift - About Swift]]></title>
    <link href="http://zxhfirefox.github.io/blog/2014/09/14/welcome-to-swift-about-swift/"/>
    <updated>2014-09-14T16:20:47+08:00</updated>
    <id>http://zxhfirefox.github.io/blog/2014/09/14/welcome-to-swift-about-swift</id>
    <content type="html"><![CDATA[<p>Swift是一门建立在C和Objective-C的优点之上，而又没有C兼容性限制的用来编写iOS和OS X应用的编程语言。Swift采用了安全的编程模式，并且添加了许多现代语言的特性来使编程更简单，更灵活而且更有意思。全新的Swift，加上成熟且备受喜爱的Cocoa和CocoaTouch的框架，将让我们去重新想象如何开发软件。</p>

<p>创建Swift已经好几年了。Apple通过改进现有的编译器，调试器和基础框架来为Swift打基础。我们通过ARC来简化内存管理。我们建立在Foundation和Cocoa的框架栈也全部标准化和现代化。Objective-C也支持了Block，容器字面量(collection literals)和模块（modules），这些使得框架在适应现代语言的时候不会出现问题。就是因为这些改进，我们才能够在现在为我们今后软件开发介绍一门的新的语言。</p>

<p>Objective-C的开发者不会觉得Swift太陌生。Swift应用了Objc的命名参数的可读性还有Objc的动态对象模型。它还提供了无缝的访问Cocoa框架以及Objc代码混编的能力。在这些基础之上，Swift还提供了很多新的特性，并统一了语言中过程化和面向对象的部分。</p>

<p>Swift对于新人来说一样友好。他是第一个产业品质的系统编程语言，但是同时又像脚本语言一样有趣和非常强的表达能力。它支持Playground，一种可以让程序员不用编译，运行程序而直接看到结果的特性。</p>

<p>Swift将苹果广阔的工程文化里的智慧和现代语言最好的思想结合在一起。编译器为了性能而优化，语言为了开发而优化，两者都不舍弃。Swift可以很好的从简单的hello，world伸缩到整个操作系统。所有这些都将使得Swift成为开发者和苹果一个明智的投资。</p>

<p>Swift提供了一个非常好的方式来开发iOS和OS X应用，并且它也会持续改进。我们对于Swift的未来是有远大目标的。我们也迫不及待的希望看到你用它来创造的东西。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Translate The Swift Programming Language]]></title>
    <link href="http://zxhfirefox.github.io/blog/2014/09/14/translate-the-swift-programming-language/"/>
    <updated>2014-09-14T14:26:00+08:00</updated>
    <id>http://zxhfirefox.github.io/blog/2014/09/14/translate-the-swift-programming-language</id>
    <content type="html"><![CDATA[<p>This blog was created a long time ago, I did not write any meaningful things.</p>

<p>As Apple release the swift programming language 1.0, I think I want to write something.</p>

<p>The first goal is trying to translate the Swift Programming Language.</p>

<p>Hope I can make it.</p>
]]></content>
  </entry>
  
</feed>
